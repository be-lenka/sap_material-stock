<?php
/**
 * SerialNumbersWithMaterialStockApi
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\MaterialStock
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Material Stock - Read
 *
 * This service enables you to retrieve material stock information using the OData protocol with filter data provided in the payload. It can be consumed by external warehouse applications.
 *
 * The version of the OpenAPI document: 1.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BeLenka\SAP\MaterialStock\Api;

use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Exception\ConnectException;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Psr7\MultipartStream;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\RequestOptions;
use BeLenka\SAP\MaterialStock\ApiException;
use BeLenka\SAP\MaterialStock\Configuration;
use BeLenka\SAP\MaterialStock\HeaderSelector;
use BeLenka\SAP\MaterialStock\ObjectSerializer;

/**
 * SerialNumbersWithMaterialStockApi Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\MaterialStock
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SerialNumbersWithMaterialStockApi
{
    /**
     * @var ClientInterface
     */
    protected $client;

    /**
     * @var Configuration
     */
    protected $config;

    /**
     * @var HeaderSelector
     */
    protected $headerSelector;

    /**
     * @var int Host index
     */
    protected $hostIndex;

    /** @var string[] $contentTypes **/
    public const contentTypes = [
        'aMaterialSerialNumberGet' => [
            'application/json',
        ],
        'aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet' => [
            'application/json',
        ],
        'aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet' => [
            'application/json',
        ],
        'aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet' => [
            'application/json',
        ],
    ];

/**
     * @param ClientInterface $client
     * @param Configuration   $config
     * @param HeaderSelector  $selector
     * @param int             $hostIndex (Optional) host index to select the list of hosts if defined in the OpenAPI spec
     */
    public function __construct(
        ClientInterface $client = null,
        Configuration $config = null,
        HeaderSelector $selector = null,
        $hostIndex = 0
    ) {
        $this->client = $client ?: new Client();
        $this->config = $config ?: new Configuration();
        $this->headerSelector = $selector ?: new HeaderSelector();
        $this->hostIndex = $hostIndex;
    }

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex($hostIndex): void
    {
        $this->hostIndex = $hostIndex;
    }

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex()
    {
        return $this->hostIndex;
    }

    /**
     * @return Configuration
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * Operation aMaterialSerialNumberGet
     *
     * Get entities from A_MaterialSerialNumber
     *
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\MaterialStock\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \BeLenka\SAP\MaterialStock\Model\Wrapper|\BeLenka\SAP\MaterialStock\Model\Error
     */
    public function aMaterialSerialNumberGet($top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberGet'][0])
    {
        list($response) = $this->aMaterialSerialNumberGetWithHttpInfo($top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);
        return $response;
    }

    /**
     * Operation aMaterialSerialNumberGetWithHttpInfo
     *
     * Get entities from A_MaterialSerialNumber
     *
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\MaterialStock\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \BeLenka\SAP\MaterialStock\Model\Wrapper|\BeLenka\SAP\MaterialStock\Model\Error, HTTP status code, HTTP response headers (array of strings)
     */
    public function aMaterialSerialNumberGetWithHttpInfo($top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberGet'][0])
    {
        $request = $this->aMaterialSerialNumberGetRequest($top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\BeLenka\SAP\MaterialStock\Model\Wrapper' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\BeLenka\SAP\MaterialStock\Model\Wrapper' !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\BeLenka\SAP\MaterialStock\Model\Wrapper', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                
            }

            $returnType = '\BeLenka\SAP\MaterialStock\Model\Wrapper';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    $content = json_decode($content);
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\BeLenka\SAP\MaterialStock\Model\Wrapper',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                
            }
            throw $e;
        }
    }

    /**
     * Operation aMaterialSerialNumberGetAsync
     *
     * Get entities from A_MaterialSerialNumber
     *
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aMaterialSerialNumberGetAsync($top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberGet'][0])
    {
        return $this->aMaterialSerialNumberGetAsyncWithHttpInfo($top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation aMaterialSerialNumberGetAsyncWithHttpInfo
     *
     * Get entities from A_MaterialSerialNumber
     *
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aMaterialSerialNumberGetAsyncWithHttpInfo($top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberGet'][0])
    {
        $returnType = '\BeLenka\SAP\MaterialStock\Model\Wrapper';
        $request = $this->aMaterialSerialNumberGetRequest($top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'aMaterialSerialNumberGet'
     *
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function aMaterialSerialNumberGetRequest($top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberGet'][0])
    {

        if ($top !== null && $top < 0) {
            throw new \InvalidArgumentException('invalid value for "$top" when calling SerialNumbersWithMaterialStockApi.aMaterialSerialNumberGet, must be bigger than or equal to 0.');
        }
        
        if ($skip !== null && $skip < 0) {
            throw new \InvalidArgumentException('invalid value for "$skip" when calling SerialNumbersWithMaterialStockApi.aMaterialSerialNumberGet, must be bigger than or equal to 0.');
        }
        


        
        
        

        $resourcePath = '/A_MaterialSerialNumber';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $top,
            '$top', // param base name
            'integer', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $skip,
            '$skip', // param base name
            'integer', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $filter,
            '$filter', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $inlinecount,
            '$inlinecount', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $orderby,
            '$orderby', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $select,
            '$select', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $expand,
            '$expand', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);




        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = json_encode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires HTTP basic authentication
        if (!empty($this->config->getUsername()) || !(empty($this->config->getPassword()))) {
            $headers['Authorization'] = 'Basic ' . base64_encode($this->config->getUsername() . ":" . $this->config->getPassword());
        }
        // this endpoint requires OAuth (access token)
        if (!empty($this->config->getAccessToken())) {
            $headers['Authorization'] = 'Bearer ' . $this->config->getAccessToken();
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet
     *
     * Get entity from A_MaterialSerialNumber by key
     *
     * @param  string $material Material Number (required)
     * @param  string $serial_number Serial Number (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\MaterialStock\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \BeLenka\SAP\MaterialStock\Model\AMaterialSerialNumberType|\BeLenka\SAP\MaterialStock\Model\Error
     */
    public function aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet($material, $serial_number, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'][0])
    {
        list($response) = $this->aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGetWithHttpInfo($material, $serial_number, $select, $expand, $contentType);
        return $response;
    }

    /**
     * Operation aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGetWithHttpInfo
     *
     * Get entity from A_MaterialSerialNumber by key
     *
     * @param  string $material Material Number (required)
     * @param  string $serial_number Serial Number (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\MaterialStock\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \BeLenka\SAP\MaterialStock\Model\AMaterialSerialNumberType|\BeLenka\SAP\MaterialStock\Model\Error, HTTP status code, HTTP response headers (array of strings)
     */
    public function aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGetWithHttpInfo($material, $serial_number, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'][0])
    {
        $request = $this->aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGetRequest($material, $serial_number, $select, $expand, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\BeLenka\SAP\MaterialStock\Model\AMaterialSerialNumberType' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\BeLenka\SAP\MaterialStock\Model\AMaterialSerialNumberType' !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\BeLenka\SAP\MaterialStock\Model\AMaterialSerialNumberType', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                
            }

            $returnType = '\BeLenka\SAP\MaterialStock\Model\AMaterialSerialNumberType';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    $content = json_decode($content);
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\BeLenka\SAP\MaterialStock\Model\AMaterialSerialNumberType',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                
            }
            throw $e;
        }
    }

    /**
     * Operation aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGetAsync
     *
     * Get entity from A_MaterialSerialNumber by key
     *
     * @param  string $material Material Number (required)
     * @param  string $serial_number Serial Number (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGetAsync($material, $serial_number, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'][0])
    {
        return $this->aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGetAsyncWithHttpInfo($material, $serial_number, $select, $expand, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGetAsyncWithHttpInfo
     *
     * Get entity from A_MaterialSerialNumber by key
     *
     * @param  string $material Material Number (required)
     * @param  string $serial_number Serial Number (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGetAsyncWithHttpInfo($material, $serial_number, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'][0])
    {
        $returnType = '\BeLenka\SAP\MaterialStock\Model\AMaterialSerialNumberType';
        $request = $this->aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGetRequest($material, $serial_number, $select, $expand, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'
     *
     * @param  string $material Material Number (required)
     * @param  string $serial_number Serial Number (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGetRequest($material, $serial_number, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'][0])
    {

        // verify the required parameter 'material' is set
        if ($material === null || (is_array($material) && count($material) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $material when calling aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'
            );
        }
        if (strlen($material) > 40) {
            throw new \InvalidArgumentException('invalid length for "$material" when calling SerialNumbersWithMaterialStockApi.aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet, must be smaller than or equal to 40.');
        }
        
        // verify the required parameter 'serial_number' is set
        if ($serial_number === null || (is_array($serial_number) && count($serial_number) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $serial_number when calling aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet'
            );
        }
        if (strlen($serial_number) > 18) {
            throw new \InvalidArgumentException('invalid length for "$serial_number" when calling SerialNumbersWithMaterialStockApi.aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberGet, must be smaller than or equal to 18.');
        }
        
        
        

        $resourcePath = '/A_MaterialSerialNumber(Material=\'{Material}\',SerialNumber=\'{SerialNumber}\')';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $select,
            '$select', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $expand,
            '$expand', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);


        // path params
        if ($material !== null) {
            $resourcePath = str_replace(
                '{' . 'Material' . '}',
                ObjectSerializer::toPathValue($material),
                $resourcePath
            );
        }
        // path params
        if ($serial_number !== null) {
            $resourcePath = str_replace(
                '{' . 'SerialNumber' . '}',
                ObjectSerializer::toPathValue($serial_number),
                $resourcePath
            );
        }


        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = json_encode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires HTTP basic authentication
        if (!empty($this->config->getUsername()) || !(empty($this->config->getPassword()))) {
            $headers['Authorization'] = 'Basic ' . base64_encode($this->config->getUsername() . ":" . $this->config->getPassword());
        }
        // this endpoint requires OAuth (access token)
        if (!empty($this->config->getAccessToken())) {
            $headers['Authorization'] = 'Bearer ' . $this->config->getAccessToken();
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet
     *
     * Get entities from related to_MatlStkInAcctMod
     *
     * @param  string $material Material Number (required)
     * @param  string $serial_number Serial Number (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\MaterialStock\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \BeLenka\SAP\MaterialStock\Model\Wrapper1|\BeLenka\SAP\MaterialStock\Model\Error
     */
    public function aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet($material, $serial_number, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'][0])
    {
        list($response) = $this->aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGetWithHttpInfo($material, $serial_number, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);
        return $response;
    }

    /**
     * Operation aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGetWithHttpInfo
     *
     * Get entities from related to_MatlStkInAcctMod
     *
     * @param  string $material Material Number (required)
     * @param  string $serial_number Serial Number (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\MaterialStock\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \BeLenka\SAP\MaterialStock\Model\Wrapper1|\BeLenka\SAP\MaterialStock\Model\Error, HTTP status code, HTTP response headers (array of strings)
     */
    public function aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGetWithHttpInfo($material, $serial_number, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'][0])
    {
        $request = $this->aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGetRequest($material, $serial_number, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\BeLenka\SAP\MaterialStock\Model\Wrapper1' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\BeLenka\SAP\MaterialStock\Model\Wrapper1' !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\BeLenka\SAP\MaterialStock\Model\Wrapper1', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                
            }

            $returnType = '\BeLenka\SAP\MaterialStock\Model\Wrapper1';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    $content = json_decode($content);
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\BeLenka\SAP\MaterialStock\Model\Wrapper1',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                
            }
            throw $e;
        }
    }

    /**
     * Operation aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGetAsync
     *
     * Get entities from related to_MatlStkInAcctMod
     *
     * @param  string $material Material Number (required)
     * @param  string $serial_number Serial Number (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGetAsync($material, $serial_number, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'][0])
    {
        return $this->aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGetAsyncWithHttpInfo($material, $serial_number, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGetAsyncWithHttpInfo
     *
     * Get entities from related to_MatlStkInAcctMod
     *
     * @param  string $material Material Number (required)
     * @param  string $serial_number Serial Number (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGetAsyncWithHttpInfo($material, $serial_number, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'][0])
    {
        $returnType = '\BeLenka\SAP\MaterialStock\Model\Wrapper1';
        $request = $this->aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGetRequest($material, $serial_number, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'
     *
     * @param  string $material Material Number (required)
     * @param  string $serial_number Serial Number (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGetRequest($material, $serial_number, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'][0])
    {

        // verify the required parameter 'material' is set
        if ($material === null || (is_array($material) && count($material) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $material when calling aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'
            );
        }
        if (strlen($material) > 40) {
            throw new \InvalidArgumentException('invalid length for "$material" when calling SerialNumbersWithMaterialStockApi.aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet, must be smaller than or equal to 40.');
        }
        
        // verify the required parameter 'serial_number' is set
        if ($serial_number === null || (is_array($serial_number) && count($serial_number) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $serial_number when calling aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet'
            );
        }
        if (strlen($serial_number) > 18) {
            throw new \InvalidArgumentException('invalid length for "$serial_number" when calling SerialNumbersWithMaterialStockApi.aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet, must be smaller than or equal to 18.');
        }
        
        if ($top !== null && $top < 0) {
            throw new \InvalidArgumentException('invalid value for "$top" when calling SerialNumbersWithMaterialStockApi.aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet, must be bigger than or equal to 0.');
        }
        
        if ($skip !== null && $skip < 0) {
            throw new \InvalidArgumentException('invalid value for "$skip" when calling SerialNumbersWithMaterialStockApi.aMaterialSerialNumberMaterialMaterialSerialNumberSerialNumberToMatlStkInAcctModGet, must be bigger than or equal to 0.');
        }
        


        
        
        

        $resourcePath = '/A_MaterialSerialNumber(Material=\'{Material}\',SerialNumber=\'{SerialNumber}\')/to_MatlStkInAcctMod';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $top,
            '$top', // param base name
            'integer', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $skip,
            '$skip', // param base name
            'integer', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $filter,
            '$filter', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $inlinecount,
            '$inlinecount', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $orderby,
            '$orderby', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $select,
            '$select', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $expand,
            '$expand', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);


        // path params
        if ($material !== null) {
            $resourcePath = str_replace(
                '{' . 'Material' . '}',
                ObjectSerializer::toPathValue($material),
                $resourcePath
            );
        }
        // path params
        if ($serial_number !== null) {
            $resourcePath = str_replace(
                '{' . 'SerialNumber' . '}',
                ObjectSerializer::toPathValue($serial_number),
                $resourcePath
            );
        }


        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = json_encode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires HTTP basic authentication
        if (!empty($this->config->getUsername()) || !(empty($this->config->getPassword()))) {
            $headers['Authorization'] = 'Basic ' . base64_encode($this->config->getUsername() . ":" . $this->config->getPassword());
        }
        // this endpoint requires OAuth (access token)
        if (!empty($this->config->getAccessToken())) {
            $headers['Authorization'] = 'Bearer ' . $this->config->getAccessToken();
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet
     *
     * Get entities from related to_MaterialSerialNumber
     *
     * @param  string $material Material in Respect of Which Stock is Managed (required)
     * @param  string $plant Plant (required)
     * @param  string $storage_location Storage Location (required)
     * @param  string $batch Batch Number (Stock Identifier) (required)
     * @param  string $supplier Supplier for Special Stock (required)
     * @param  string $customer Customer for Special Stock (required)
     * @param  string $wbs_element_internal_id WBS Element (required)
     * @param  string $sd_document Sales order number of valuated sales order stock (required)
     * @param  string $sd_document_item Sales Order Item of Valuated Sales Order Stock (required)
     * @param  string $inventory_special_stock_type Special Stock Type (required)
     * @param  string $inventory_stock_type Stock Type of Goods Movement (Stock Identifier) (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\MaterialStock\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \BeLenka\SAP\MaterialStock\Model\Wrapper|\BeLenka\SAP\MaterialStock\Model\Error
     */
    public function aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet($material, $plant, $storage_location, $batch, $supplier, $customer, $wbs_element_internal_id, $sd_document, $sd_document_item, $inventory_special_stock_type, $inventory_stock_type, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'][0])
    {
        list($response) = $this->aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGetWithHttpInfo($material, $plant, $storage_location, $batch, $supplier, $customer, $wbs_element_internal_id, $sd_document, $sd_document_item, $inventory_special_stock_type, $inventory_stock_type, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);
        return $response;
    }

    /**
     * Operation aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGetWithHttpInfo
     *
     * Get entities from related to_MaterialSerialNumber
     *
     * @param  string $material Material in Respect of Which Stock is Managed (required)
     * @param  string $plant Plant (required)
     * @param  string $storage_location Storage Location (required)
     * @param  string $batch Batch Number (Stock Identifier) (required)
     * @param  string $supplier Supplier for Special Stock (required)
     * @param  string $customer Customer for Special Stock (required)
     * @param  string $wbs_element_internal_id WBS Element (required)
     * @param  string $sd_document Sales order number of valuated sales order stock (required)
     * @param  string $sd_document_item Sales Order Item of Valuated Sales Order Stock (required)
     * @param  string $inventory_special_stock_type Special Stock Type (required)
     * @param  string $inventory_stock_type Stock Type of Goods Movement (Stock Identifier) (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\MaterialStock\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \BeLenka\SAP\MaterialStock\Model\Wrapper|\BeLenka\SAP\MaterialStock\Model\Error, HTTP status code, HTTP response headers (array of strings)
     */
    public function aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGetWithHttpInfo($material, $plant, $storage_location, $batch, $supplier, $customer, $wbs_element_internal_id, $sd_document, $sd_document_item, $inventory_special_stock_type, $inventory_stock_type, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'][0])
    {
        $request = $this->aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGetRequest($material, $plant, $storage_location, $batch, $supplier, $customer, $wbs_element_internal_id, $sd_document, $sd_document_item, $inventory_special_stock_type, $inventory_stock_type, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\BeLenka\SAP\MaterialStock\Model\Wrapper' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\BeLenka\SAP\MaterialStock\Model\Wrapper' !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\BeLenka\SAP\MaterialStock\Model\Wrapper', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                
            }

            $returnType = '\BeLenka\SAP\MaterialStock\Model\Wrapper';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    $content = json_decode($content);
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\BeLenka\SAP\MaterialStock\Model\Wrapper',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                
            }
            throw $e;
        }
    }

    /**
     * Operation aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGetAsync
     *
     * Get entities from related to_MaterialSerialNumber
     *
     * @param  string $material Material in Respect of Which Stock is Managed (required)
     * @param  string $plant Plant (required)
     * @param  string $storage_location Storage Location (required)
     * @param  string $batch Batch Number (Stock Identifier) (required)
     * @param  string $supplier Supplier for Special Stock (required)
     * @param  string $customer Customer for Special Stock (required)
     * @param  string $wbs_element_internal_id WBS Element (required)
     * @param  string $sd_document Sales order number of valuated sales order stock (required)
     * @param  string $sd_document_item Sales Order Item of Valuated Sales Order Stock (required)
     * @param  string $inventory_special_stock_type Special Stock Type (required)
     * @param  string $inventory_stock_type Stock Type of Goods Movement (Stock Identifier) (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGetAsync($material, $plant, $storage_location, $batch, $supplier, $customer, $wbs_element_internal_id, $sd_document, $sd_document_item, $inventory_special_stock_type, $inventory_stock_type, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'][0])
    {
        return $this->aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGetAsyncWithHttpInfo($material, $plant, $storage_location, $batch, $supplier, $customer, $wbs_element_internal_id, $sd_document, $sd_document_item, $inventory_special_stock_type, $inventory_stock_type, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGetAsyncWithHttpInfo
     *
     * Get entities from related to_MaterialSerialNumber
     *
     * @param  string $material Material in Respect of Which Stock is Managed (required)
     * @param  string $plant Plant (required)
     * @param  string $storage_location Storage Location (required)
     * @param  string $batch Batch Number (Stock Identifier) (required)
     * @param  string $supplier Supplier for Special Stock (required)
     * @param  string $customer Customer for Special Stock (required)
     * @param  string $wbs_element_internal_id WBS Element (required)
     * @param  string $sd_document Sales order number of valuated sales order stock (required)
     * @param  string $sd_document_item Sales Order Item of Valuated Sales Order Stock (required)
     * @param  string $inventory_special_stock_type Special Stock Type (required)
     * @param  string $inventory_stock_type Stock Type of Goods Movement (Stock Identifier) (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGetAsyncWithHttpInfo($material, $plant, $storage_location, $batch, $supplier, $customer, $wbs_element_internal_id, $sd_document, $sd_document_item, $inventory_special_stock_type, $inventory_stock_type, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'][0])
    {
        $returnType = '\BeLenka\SAP\MaterialStock\Model\Wrapper';
        $request = $this->aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGetRequest($material, $plant, $storage_location, $batch, $supplier, $customer, $wbs_element_internal_id, $sd_document, $sd_document_item, $inventory_special_stock_type, $inventory_stock_type, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
     *
     * @param  string $material Material in Respect of Which Stock is Managed (required)
     * @param  string $plant Plant (required)
     * @param  string $storage_location Storage Location (required)
     * @param  string $batch Batch Number (Stock Identifier) (required)
     * @param  string $supplier Supplier for Special Stock (required)
     * @param  string $customer Customer for Special Stock (required)
     * @param  string $wbs_element_internal_id WBS Element (required)
     * @param  string $sd_document Sales order number of valuated sales order stock (required)
     * @param  string $sd_document_item Sales Order Item of Valuated Sales Order Stock (required)
     * @param  string $inventory_special_stock_type Special Stock Type (required)
     * @param  string $inventory_stock_type Stock Type of Goods Movement (Stock Identifier) (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGetRequest($material, $plant, $storage_location, $batch, $supplier, $customer, $wbs_element_internal_id, $sd_document, $sd_document_item, $inventory_special_stock_type, $inventory_stock_type, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'][0])
    {

        // verify the required parameter 'material' is set
        if ($material === null || (is_array($material) && count($material) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $material when calling aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
            );
        }
        if (strlen($material) > 40) {
            throw new \InvalidArgumentException('invalid length for "$material" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be smaller than or equal to 40.');
        }
        
        // verify the required parameter 'plant' is set
        if ($plant === null || (is_array($plant) && count($plant) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $plant when calling aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
            );
        }
        if (strlen($plant) > 4) {
            throw new \InvalidArgumentException('invalid length for "$plant" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be smaller than or equal to 4.');
        }
        
        // verify the required parameter 'storage_location' is set
        if ($storage_location === null || (is_array($storage_location) && count($storage_location) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $storage_location when calling aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
            );
        }
        if (strlen($storage_location) > 4) {
            throw new \InvalidArgumentException('invalid length for "$storage_location" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be smaller than or equal to 4.');
        }
        
        // verify the required parameter 'batch' is set
        if ($batch === null || (is_array($batch) && count($batch) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $batch when calling aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
            );
        }
        if (strlen($batch) > 10) {
            throw new \InvalidArgumentException('invalid length for "$batch" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be smaller than or equal to 10.');
        }
        
        // verify the required parameter 'supplier' is set
        if ($supplier === null || (is_array($supplier) && count($supplier) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $supplier when calling aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
            );
        }
        if (strlen($supplier) > 10) {
            throw new \InvalidArgumentException('invalid length for "$supplier" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be smaller than or equal to 10.');
        }
        
        // verify the required parameter 'customer' is set
        if ($customer === null || (is_array($customer) && count($customer) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $customer when calling aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
            );
        }
        if (strlen($customer) > 10) {
            throw new \InvalidArgumentException('invalid length for "$customer" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be smaller than or equal to 10.');
        }
        
        // verify the required parameter 'wbs_element_internal_id' is set
        if ($wbs_element_internal_id === null || (is_array($wbs_element_internal_id) && count($wbs_element_internal_id) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $wbs_element_internal_id when calling aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
            );
        }
        if (strlen($wbs_element_internal_id) > 8) {
            throw new \InvalidArgumentException('invalid length for "$wbs_element_internal_id" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be smaller than or equal to 8.');
        }
        
        // verify the required parameter 'sd_document' is set
        if ($sd_document === null || (is_array($sd_document) && count($sd_document) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $sd_document when calling aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
            );
        }
        if (strlen($sd_document) > 10) {
            throw new \InvalidArgumentException('invalid length for "$sd_document" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be smaller than or equal to 10.');
        }
        
        // verify the required parameter 'sd_document_item' is set
        if ($sd_document_item === null || (is_array($sd_document_item) && count($sd_document_item) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $sd_document_item when calling aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
            );
        }
        if (strlen($sd_document_item) > 6) {
            throw new \InvalidArgumentException('invalid length for "$sd_document_item" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be smaller than or equal to 6.');
        }
        
        // verify the required parameter 'inventory_special_stock_type' is set
        if ($inventory_special_stock_type === null || (is_array($inventory_special_stock_type) && count($inventory_special_stock_type) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $inventory_special_stock_type when calling aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
            );
        }
        if (strlen($inventory_special_stock_type) > 1) {
            throw new \InvalidArgumentException('invalid length for "$inventory_special_stock_type" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be smaller than or equal to 1.');
        }
        
        // verify the required parameter 'inventory_stock_type' is set
        if ($inventory_stock_type === null || (is_array($inventory_stock_type) && count($inventory_stock_type) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $inventory_stock_type when calling aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet'
            );
        }
        if (strlen($inventory_stock_type) > 2) {
            throw new \InvalidArgumentException('invalid length for "$inventory_stock_type" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be smaller than or equal to 2.');
        }
        
        if ($top !== null && $top < 0) {
            throw new \InvalidArgumentException('invalid value for "$top" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be bigger than or equal to 0.');
        }
        
        if ($skip !== null && $skip < 0) {
            throw new \InvalidArgumentException('invalid value for "$skip" when calling SerialNumbersWithMaterialStockApi.aMatlStkInAcctModMaterialMaterialPlantPlantStorageLocationStorageLocationBatchBatchSupplierSupplierCustomerCustomerWBSElementInternalIDWBSElementInternalIDSDDocumentSDDocumentSDDocumentItemSDDocumentItemInventorySpecialStockTypeInventorySpecialStockTypeInventoryStockTypeInventoryStockTypeToMaterialSerialNumberGet, must be bigger than or equal to 0.');
        }
        


        
        
        

        $resourcePath = '/A_MatlStkInAcctMod(Material=\'{Material}\',Plant=\'{Plant}\',StorageLocation=\'{StorageLocation}\',Batch=\'{Batch}\',Supplier=\'{Supplier}\',Customer=\'{Customer}\',WBSElementInternalID=\'{WBSElementInternalID}\',SDDocument=\'{SDDocument}\',SDDocumentItem=\'{SDDocumentItem}\',InventorySpecialStockType=\'{InventorySpecialStockType}\',InventoryStockType=\'{InventoryStockType}\')/to_MaterialSerialNumber';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $top,
            '$top', // param base name
            'integer', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $skip,
            '$skip', // param base name
            'integer', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $filter,
            '$filter', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $inlinecount,
            '$inlinecount', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $orderby,
            '$orderby', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $select,
            '$select', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $expand,
            '$expand', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);


        // path params
        if ($material !== null) {
            $resourcePath = str_replace(
                '{' . 'Material' . '}',
                ObjectSerializer::toPathValue($material),
                $resourcePath
            );
        }
        // path params
        if ($plant !== null) {
            $resourcePath = str_replace(
                '{' . 'Plant' . '}',
                ObjectSerializer::toPathValue($plant),
                $resourcePath
            );
        }
        // path params
        if ($storage_location !== null) {
            $resourcePath = str_replace(
                '{' . 'StorageLocation' . '}',
                ObjectSerializer::toPathValue($storage_location),
                $resourcePath
            );
        }
        // path params
        if ($batch !== null) {
            $resourcePath = str_replace(
                '{' . 'Batch' . '}',
                ObjectSerializer::toPathValue($batch),
                $resourcePath
            );
        }
        // path params
        if ($supplier !== null) {
            $resourcePath = str_replace(
                '{' . 'Supplier' . '}',
                ObjectSerializer::toPathValue($supplier),
                $resourcePath
            );
        }
        // path params
        if ($customer !== null) {
            $resourcePath = str_replace(
                '{' . 'Customer' . '}',
                ObjectSerializer::toPathValue($customer),
                $resourcePath
            );
        }
        // path params
        if ($wbs_element_internal_id !== null) {
            $resourcePath = str_replace(
                '{' . 'WBSElementInternalID' . '}',
                ObjectSerializer::toPathValue($wbs_element_internal_id),
                $resourcePath
            );
        }
        // path params
        if ($sd_document !== null) {
            $resourcePath = str_replace(
                '{' . 'SDDocument' . '}',
                ObjectSerializer::toPathValue($sd_document),
                $resourcePath
            );
        }
        // path params
        if ($sd_document_item !== null) {
            $resourcePath = str_replace(
                '{' . 'SDDocumentItem' . '}',
                ObjectSerializer::toPathValue($sd_document_item),
                $resourcePath
            );
        }
        // path params
        if ($inventory_special_stock_type !== null) {
            $resourcePath = str_replace(
                '{' . 'InventorySpecialStockType' . '}',
                ObjectSerializer::toPathValue($inventory_special_stock_type),
                $resourcePath
            );
        }
        // path params
        if ($inventory_stock_type !== null) {
            $resourcePath = str_replace(
                '{' . 'InventoryStockType' . '}',
                ObjectSerializer::toPathValue($inventory_stock_type),
                $resourcePath
            );
        }


        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = json_encode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires HTTP basic authentication
        if (!empty($this->config->getUsername()) || !(empty($this->config->getPassword()))) {
            $headers['Authorization'] = 'Basic ' . base64_encode($this->config->getUsername() . ":" . $this->config->getPassword());
        }
        // this endpoint requires OAuth (access token)
        if (!empty($this->config->getAccessToken())) {
            $headers['Authorization'] = 'Bearer ' . $this->config->getAccessToken();
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Create http client option
     *
     * @throws \RuntimeException on file opening failure
     * @return array of http client options
     */
    protected function createHttpClientOption()
    {
        $options = [];
        if ($this->config->getDebug()) {
            $options[RequestOptions::DEBUG] = fopen($this->config->getDebugFile(), 'a');
            if (!$options[RequestOptions::DEBUG]) {
                throw new \RuntimeException('Failed to open the debug file: ' . $this->config->getDebugFile());
            }
        }

        return $options;
    }
}
